cmake_minimum_required(VERSION 2.8.3)
project(variant_topic_tools)

# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
# set(CMAKE_BUILD_TYPE RelWithDebInfo)

## Find catkin macros and libraries
find_package(catkin REQUIRED
  COMPONENTS
    cmake_modules
    roscpp
    roslib
    variant_msgs
)

###################################
## catkin specific configuration ##
###################################
## The catkin_package macro generates cmake config files for your package
## Declare things to be passed to dependent projects
## INCLUDE_DIRS: uncomment this if you package contains header files
## LIBRARIES: libraries you create in this project that dependent projects also need
## CATKIN_DEPENDS: catkin_packages dependent projects also need
## DEPENDS: system dependencies of this project that dependent projects also need
catkin_package(
  INCLUDE_DIRS include
  LIBRARIES variant_topic_tools
  CATKIN_DEPENDS
    roscpp
    roslib
    variant_msgs
)

###########
## Build ##
###########

## Specify additional locations of header files
## Your package locations should be listed before other locations
include_directories(
  include
  ${catkin_INCLUDE_DIRS}
)

## Declare a cpp library
add_library(variant_topic_tools
  src/ArrayDataType.cpp
  src/ArraySerializer.cpp
  src/ArrayVariant.cpp
  src/BuiltinDataType.cpp
  src/BuiltinSerializer.cpp
  src/BuiltinVariant.cpp
  src/CollectionVariant.cpp
  src/DataType.cpp
  src/DataTypeRegistry.cpp
  src/Exceptions.cpp
  src/MD5Sum.cpp
  src/Message.cpp
  src/MessageConstant.cpp
  src/MessageDataType.cpp
  src/MessageDefinition.cpp
  src/MessageDefinitionParser.cpp
  src/MessageHeader.cpp
  src/MessageMember.cpp
  src/MessageSerializer.cpp
  src/MessageTraits.cpp
  src/MessageType.cpp
  src/MessageTypeParser.cpp
  src/MessageVariable.cpp
  src/MessageVariant.cpp
  src/Publisher.cpp
  src/Serialization.cpp
  src/Serializer.cpp
  src/Subscriber.cpp
  src/Variant.cpp
)

add_executable(
  echo
  src/echo.cpp
)
add_executable(
  info
  src/info.cpp
)
add_executable(
  publish
  src/publish.cpp
)
add_executable(
  relay
  src/relay.cpp
)

## Specify libraries to link a library or executable target against
target_link_libraries(
  variant_topic_tools
  ${catkin_LIBRARIES}
)

target_link_libraries(
  echo
  variant_topic_tools
  ${catkin_LIBRARIES}
)
target_link_libraries(
  info
  variant_topic_tools
  ${catkin_LIBRARIES}
)
target_link_libraries(
  publish
  variant_topic_tools
  ${catkin_LIBRARIES}
)
target_link_libraries(
  relay
  variant_topic_tools
  ${catkin_LIBRARIES}
)
